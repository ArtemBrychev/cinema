/*
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç RuTubePlayer - —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∏–ª—å–º–∞ —Å –ø–ª–µ–µ—Ä–æ–º.
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
- –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞ —á–µ—Ä–µ–∑ RuTube –ø–ª–µ–µ—Ä
- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–º (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ)
- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∏–ª—å–º–µ
- –°–µ–∫—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤

–§—É–Ω–∫—Ü–∏–∏:
- fetchMovie - –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–∏–ª—å–º–µ
- checkIfLiked - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
- handleAddToFavourite - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
- handleRemoveFromFavourite - —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ

–ó–∞–ø—Ä–æ—Å—ã:
- GET /api/films/film/{id} - –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–∞
- GET /api/check/like/{id} - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
- POST /api/newlike/{id} - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
- DELETE /api/delete/like/{id} - —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ

–°–æ—Å—Ç–æ—è–Ω–∏—è:
- movie - –¥–∞–Ω–Ω—ã–µ –æ —Ñ–∏–ª—å–º–µ
- isLiked - —Å—Ç–∞—Ç—É—Å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
- loading - —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
- error - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

–ö–æ–Ω—Ç–µ–∫—Å—Ç:
- useAuth - –¥–∞–Ω–Ω—ã–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (isAuthenticated, token)

–≠–ª–µ–º–µ–Ω—Ç—ã:
- –ü–ª–µ–µ—Ä RuTube
- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª—å–º–µ (–Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ)
- –ö–Ω–æ–ø–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã–º
- –°–µ–∫—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤ (ReviewSection)
*/

import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import './RuTubePlayer.css';
import ReviewSection from '../components/ReviewSection';
import { useAuth } from '../context/AuthContext';

function RuTubePlayer() {
  const { id } = useParams();
  const [movie, setMovie] = useState(null);
  const [isLiked, setIsLiked] = useState(false);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const { isAuthenticated, token } = useAuth();

  const fetchMovie = async () => {
    try {
      const response = await fetch(`/api/films/film/${id}`);
      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–∞');
      const data = await response.json();
      setMovie(data);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–∞:", error);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∏–ª—å–º');
    }
  };

  const checkIfLiked = async () => {
    if (!isAuthenticated || !token) {
      setIsLiked(false);
      return;
    }

    try {
      const response = await fetch(`/api/check/like/${id}`, {
        headers: { 'Authorization': `Bearer ${token}` }
      });
      
      if (!response.ok) {
        if (response.status === 404) {
          setIsLiked(false);
          return;
        }
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
      }
      
      const data = await response.json();
      setIsLiked(data === true);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
      setIsLiked(false);
    }
  };

  const handleAddToFavourite = async () => {
    setLoading(true);
    setError(null);
    try {
      const response = await fetch(`/api/newlike/${id}`, {
        method: 'POST',
        headers: { 'Authorization': `Bearer ${token}` }
      });
      
      if (response.status === 400) {
        const data = await response.json();
        throw new Error(data.error || '–§–∏–ª—å–º —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º');
      }
      
      if (!response.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ');
      }

      setIsLiked(true);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', error);
      setError(error.message);
    } finally {
      setLoading(false);
    }
  };

  const handleRemoveFromFavourite = async () => {
    setLoading(true);
    setError(null);
    try {
      const response = await fetch(`/api/delete/like/${id}`, {
        method: 'DELETE',
        headers: { 'Authorization': `Bearer ${token}` }
      });
      
      if (!response.ok && response.status !== 404) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
      }
      
      setIsLiked(false);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
      setError(error.message);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchMovie();
    
    if (isAuthenticated) {
      checkIfLiked();
    } else {
      setIsLiked(false);
    }
  }, [id, isAuthenticated]);

  if (!movie) {
    return (
      <div className="text-center mt-4">
        {error ? (
          <div className="alert alert-danger">{error}</div>
        ) : (
          '–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å–º–∞...'
        )}
      </div>
    );
  }

  return (
    <div className='playerStyles mx-2'>
      <h2 className='titleStyles mt-1'>–§–∏–ª—å–º: {movie.name}</h2>
      
      <div className='iframeContainerStyles'>
        <iframe
          className='iframeStyles'
          src={movie.rutubeLink}
          frameBorder="0"
          allow="clipboard-write; autoplay"
          allowFullScreen
          title="RuTube Video Player"
        ></iframe>
      </div>

      <h3 className='mt-3'>–û–ø–∏—Å–∞–Ω–∏–µ:</h3>
      <p className='mb-4'>{movie.description}</p>

      {error && (
        <div className="alert alert-warning mb-3">
          {error}
        </div>
      )}

      {isAuthenticated ? (
        <button
          onClick={isLiked ? handleRemoveFromFavourite : handleAddToFavourite}
          disabled={loading}
          className={`btn ${isLiked ? 'btn-danger' : 'btn-primary'} mb-4`}
          style={{ minWidth: '200px' }}
        >
          {loading ? (
            <span>
              {isLiked ? '–£–¥–∞–ª–µ–Ω–∏–µ...' : '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ...'}
            </span>
          ) : (
            <span>
              {isLiked ? '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ üíî' : '–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ‚ù§Ô∏è'}
            </span>
          )}
        </button>
      ) : (
        <p className='text-warning mb-4'>
          –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ–∏–ª—å–º—ã –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
        </p>
      )}

      <ReviewSection filmId={id} />
    </div>
  );
}

export default RuTubePlayer;